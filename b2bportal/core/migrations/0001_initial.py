# Generated by Django 3.2 on 2022-11-21 12:48

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='NaqelUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile_phone', models.CharField(max_length=20, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Enter a valid international mobile phone number starting with +(country code)', regex='^\\+?1?\\d{9,15}$')], verbose_name='Mobile phone')),
                ('username', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='username')),
                ('fullname', models.CharField(blank=True, max_length=191, null=True, verbose_name='fullname')),
                ('email', models.EmailField(max_length=191, unique=True)),
                ('additional_information', models.CharField(blank=True, max_length=100, null=True, verbose_name='Additional information')),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('firebaseuid', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('firebasedeviceid', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='billingtype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('gross_weight', models.FloatField(blank=True, null=True)),
                ('piece_count', models.IntegerField(blank=True, null=True)),
                ('additonal_services', models.CharField(blank=True, max_length=100, null=True)),
                ('chargable_weight', models.FloatField(blank=True, null=True)),
                ('customs_value', models.FloatField(blank=True, null=True)),
                ('goods_origin', models.CharField(blank=True, max_length=100, null=True)),
                ('remarks', models.CharField(blank=True, max_length=100, null=True)),
                ('booking_date', models.DateField(blank=True, max_length=10, null=True, verbose_name='booking_Pickup_Date')),
                ('ready_time', models.TimeField(blank=True, null=True, verbose_name='Booking_Ready_Time')),
                ('Latest_time', models.TimeField(blank=True, null=True, verbose_name='Booking_Latest_time')),
                ('payment_method', models.CharField(blank=True, choices=[('Cash', 'Cash'), ('Credit-card', 'Credit-card'), ('Shipper-Account', 'Shipper-Account'), ('Other-Account-Type', 'Other-Account-Type')], default='Cash', max_length=50, null=True, verbose_name='payment method')),
                ('bookingref', models.CharField(blank=True, max_length=8, null=True, verbose_name='Booking#')),
                ('pickup_date', models.DateField(blank=True, max_length=10, null=True, verbose_name='Pickup_Date')),
                ('pickup_time', models.TimeField(blank=True, null=True, verbose_name='Booking_Pickup_time')),
                ('booking_status', models.CharField(blank=True, choices=[('Booked', 'Booked'), ('Courier-Informed', 'Courier-Informed'), ('Cancel-Booking', 'Cancel-Booking'), ('Scheduled', 'Scheduled'), ('Picked-Up', 'Picked-Up'), ('Miss-PickUp', 'Miss-PickUp'), ('Acknowledge', 'Acknowledge')], default='Booked', max_length=25, null=True, verbose_name='Booking Status')),
                ('is_SMS', models.BooleanField(blank=True, default=False, null=True)),
                ('is_Push', models.BooleanField(blank=True, default=False, null=True)),
                ('is_Email', models.BooleanField(blank=True, default=False, null=True)),
                ('is_fav', models.BooleanField(blank=True, default=False, null=True)),
                ('pickup_point', models.CharField(blank=True, max_length=191, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='city',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('station', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('account_number', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('mobile_number', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_city', to='core.city')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('account_number', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('registration_number', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('email_address', models.CharField(blank=True, max_length=100, null=True)),
                ('post_code', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('allowed_users', models.ManyToManyField(blank=True, null=True, to=settings.AUTH_USER_MODEL)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comapny_city', to='core.city')),
                ('comapny_origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_org_city', to='core.city')),
            ],
        ),
        migrations.CreateModel(
            name='ComplaintsType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Type', models.CharField(max_length=100, null=True, verbose_name='CAFType')),
            ],
        ),
        migrations.CreateModel(
            name='consignee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=191, null=True)),
                ('pickup_point', models.CharField(blank=True, max_length=100, null=True)),
                ('shipping_instruction', models.CharField(blank=True, max_length=100, null=True)),
                ('account_number', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consignee_city', to='core.city')),
                ('company_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consignee_comapny_name', to='core.companyprofile')),
            ],
        ),
        migrations.CreateModel(
            name='country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('info_Country_id', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EnquiryModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100, verbose_name='EName')),
                ('Email', models.EmailField(max_length=191)),
                ('PhoneNo', models.CharField(max_length=100, verbose_name='PhoneNumber')),
                ('Details', models.CharField(max_length=191, verbose_name='Details')),
            ],
        ),
        migrations.CreateModel(
            name='IndustryType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Type', models.CharField(max_length=100, null=True, verbose_name='IndustType')),
            ],
        ),
        migrations.CreateModel(
            name='podtype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SchedulingReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100, null=True, verbose_name='Reason')),
                ('StatusID', models.IntegerField(null=True, verbose_name='StatusID')),
            ],
        ),
        migrations.CreateModel(
            name='shipmenttype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StandardCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CodeType', models.CharField(blank=True, max_length=50, null=True)),
                ('CodeValue', models.CharField(blank=True, max_length=191, null=True)),
                ('RefID', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='state',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SystemVariables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variableKey', models.CharField(blank=True, db_index=True, max_length=191, null=True)),
                ('variableValue', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('waybillno', models.IntegerField(db_index=True, unique=True)),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('pickupdate', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('currentstatus', models.CharField(blank=True, max_length=191, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('currentstatusar', models.CharField(blank=True, max_length=191, null=True)),
                ('destinationar', models.CharField(blank=True, max_length=100, null=True)),
                ('piececount', models.IntegerField(blank=True, null=True)),
                ('expected_delivery', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('paymentmethod', models.CharField(blank=True, max_length=100, null=True)),
                ('iscompleted', models.BooleanField(blank=True, null=True)),
                ('mobile_phone', models.CharField(blank=True, max_length=17, null=True, verbose_name='Mobile phone')),
                ('email', models.EmailField(blank=True, max_length=70, null=True)),
                ('is_sync', models.BooleanField(blank=True, default=False, null=True, verbose_name='is_sync')),
                ('eventCode', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UploadStaging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refno', models.CharField(blank=True, max_length=191, null=True)),
                ('origin', models.CharField(blank=True, max_length=191, null=True)),
                ('Destination', models.CharField(blank=True, max_length=191, null=True)),
                ('Name', models.CharField(blank=True, max_length=191, null=True)),
                ('Email', models.CharField(blank=True, max_length=191, null=True)),
                ('PhoneNo', models.CharField(blank=True, max_length=191, null=True)),
                ('MobileNo', models.CharField(blank=True, max_length=191, null=True)),
                ('Address', models.CharField(blank=True, max_length=191, null=True)),
                ('Location', models.CharField(blank=True, max_length=191, null=True)),
                ('POBox', models.CharField(blank=True, max_length=191, null=True)),
                ('Date', models.DateField(blank=True, max_length=10, null=True, verbose_name='Pickup Date')),
                ('Peices', models.IntegerField(blank=True, null=True, verbose_name='pcs')),
                ('Weight', models.FloatField(blank=True, null=True)),
                ('Width', models.FloatField(blank=True, null=True)),
                ('Length', models.FloatField(blank=True, null=True)),
                ('Height', models.FloatField(blank=True, null=True)),
                ('CODAmount', models.FloatField(blank=True, null=True)),
                ('DeliveryInstruction', models.CharField(blank=True, max_length=191, null=True)),
                ('PODType', models.CharField(blank=True, max_length=191, null=True)),
                ('DeclaredValue', models.FloatField(blank=True, null=True)),
                ('ConsigneeNationalID', models.CharField(blank=True, max_length=191, null=True)),
                ('GoodDesc', models.CharField(blank=True, max_length=191, null=True)),
                ('message', models.CharField(blank=True, max_length=191, null=True)),
                ('sessionUserID', models.CharField(blank=True, max_length=191, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WaybillGenerate',
            fields=[
                ('LatestWaybillNo', models.CharField(blank=True, max_length=20, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='TrackingDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refrenceid', models.IntegerField(db_index=True, unique=True)),
                ('description', models.CharField(blank=True, max_length=191, null=True)),
                ('descriptionAr', models.CharField(blank=True, max_length=191, null=True)),
                ('statusid', models.IntegerField(blank=True, null=True)),
                ('actiondate', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('actiontime', models.TimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=191, null=True)),
                ('locationAr', models.CharField(blank=True, max_length=191, null=True)),
                ('isdeleted', models.BooleanField(blank=True, null=True)),
                ('employid', models.IntegerField(blank=True, null=True)),
                ('is_sync', models.BooleanField(blank=True, default=False, null=True, verbose_name='is_sync')),
                ('eventCode', models.IntegerField(blank=True, null=True)),
                ('waybillno', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.tracking')),
            ],
        ),
        migrations.CreateModel(
            name='shipper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=191, null=True)),
                ('pickup_point', models.CharField(blank=True, max_length=100, null=True)),
                ('shipping_instruction', models.CharField(blank=True, max_length=100, null=True)),
                ('account_number', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shipper_city', to='core.city')),
                ('company_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shipper_comapny_name', to='core.companyprofile')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shipper_country', to='core.country')),
            ],
        ),
        migrations.CreateModel(
            name='KeyAccountContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('KeyEmail', models.EmailField(max_length=191)),
                ('KeyContactNo', models.CharField(max_length=100, verbose_name='KeyContactNo')),
                ('account_number', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accountNo', to='core.client')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerWaybill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refrenceno', models.CharField(blank=True, max_length=100, null=True)),
                ('waybillno', models.CharField(blank=True, default=0, max_length=20, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=100, null=True)),
                ('shiping_instruction', models.CharField(blank=True, max_length=100, null=True)),
                ('delivery_instruction', models.CharField(blank=True, max_length=100, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('piece_count', models.IntegerField(blank=True, null=True)),
                ('height', models.FloatField(blank=True, null=True)),
                ('width', models.FloatField(blank=True, null=True)),
                ('length', models.FloatField(blank=True, null=True)),
                ('vol_weight', models.FloatField(blank=True, null=True)),
                ('insurance', models.FloatField(blank=True, null=True)),
                ('CODAmount', models.FloatField(blank=True, null=True)),
                ('declare_value', models.FloatField(blank=True, null=True)),
                ('cust_national_id', models.CharField(blank=True, max_length=191, null=True)),
                ('pickup_date', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='Pickup-Date')),
                ('pickup_time', models.TimeField(blank=True, null=True)),
                ('pickup_point', models.CharField(blank=True, max_length=191, null=True)),
                ('billing_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='CustomerWaybill_billingtype', to='core.billingtype')),
                ('booking_no', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.booking')),
                ('consignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.consignee')),
                ('destination_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='booking_dest_city', to='core.city', verbose_name='Destination')),
                ('origin_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='booking_org_city', to='core.city', verbose_name='Origin')),
                ('pod_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.podtype')),
                ('shipment_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.shipmenttype')),
                ('shipper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='waybill_shipper', to='core.shipper')),
            ],
        ),
        migrations.CreateModel(
            name='CScontact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CsEmail', models.EmailField(max_length=191)),
                ('CSContactNo', models.CharField(max_length=100, verbose_name='CSContactNo')),
                ('account_number', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account', to='core.client')),
            ],
        ),
        migrations.AddField(
            model_name='consignee',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consignee_country', to='core.country'),
        ),
        migrations.CreateModel(
            name='ComplaintsModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100, verbose_name='EName')),
                ('Email', models.EmailField(max_length=191)),
                ('PhoneNo', models.CharField(max_length=100, verbose_name='PhoneNumber')),
                ('Details', models.CharField(max_length=191, verbose_name='Details')),
                ('evidence', models.FileField(blank=True, null=True, upload_to='CAFevidence/')),
                ('Reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CAF_Type', to='core.complaintstype')),
            ],
        ),
        migrations.AddField(
            model_name='companyprofile',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_country', to='core.country'),
        ),
        migrations.AddField(
            model_name='companyprofile',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_state', to='core.state'),
        ),
        migrations.AddField(
            model_name='client',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.country'),
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.country'),
        ),
        migrations.AddField(
            model_name='booking',
            name='company_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='booking_comapny_name', to='core.companyprofile'),
        ),
        migrations.AddField(
            model_name='booking',
            name='company_profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.companyprofile', verbose_name='Company'),
        ),
        migrations.AddField(
            model_name='booking',
            name='consignee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consignee_booking', to='core.consignee'),
        ),
        migrations.AddField(
            model_name='booking',
            name='service_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_type', to='core.standardcode'),
        ),
        migrations.AddField(
            model_name='booking',
            name='shipper',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shipper_booking', to='core.shipper'),
        ),
        migrations.CreateModel(
            name='B2BRegisteration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ComName', models.CharField(max_length=100, verbose_name='CompanyName')),
                ('CustomerName', models.CharField(max_length=100, verbose_name='CustomerName')),
                ('MoNumber', models.CharField(max_length=50, verbose_name='MobileNo')),
                ('Email', models.EmailField(blank=True, max_length=191, null=True)),
                ('Address', models.CharField(max_length=100, verbose_name='Address')),
                ('IndType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Ind_type', to='core.industrytype')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='com_city', to='core.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Comp_country', to='core.country')),
            ],
        ),
        migrations.CreateModel(
            name='address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('address1', models.CharField(blank=True, max_length=100, null=True)),
                ('address2', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile_number1', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile_number2', models.CharField(blank=True, max_length=100, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lng', models.FloatField(blank=True, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='address_city', to='core.city')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shipper_client', to='core.client')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='address_country', to='core.country')),
            ],
        ),
    ]
